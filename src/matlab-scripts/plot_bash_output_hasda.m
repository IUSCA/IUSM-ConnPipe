%                       SYSTEM_AND_SAMPLE_SET_UP
%    This contains all general paths and variables necessary to run the
%  pipeline batch files. You may edit this as necessary depending on your
%            program paths and the subjects you want to run. 
%
% Contributors:
%        Evgeny Chumin, Indiana University School of Medicine, 2018
%                       Indiana University Bloomington, 2020                    
%        John West, Indiana University School of Medicine, 2018
%%
            %------------------------------------------------%
            %  SET PATH TO THE CONNECTOME SCRIPTS DIRECTORY  %
            %------------------------------------------------%
clear all
clc

    % Add path to connectome scripts directory
paths.scripts = fullfile(pwd);
addpath(genpath(paths.scripts));
cd ..
cd('toolbox_matlab_nifti')
addpath(genpath(pwd));
cd(paths.scripts)

                    %------------------------------%
                    %  SELECT SUBJECT DIRECTORIES  %
                    %------------------------------%
    % Set the path to the directory containing you subjects.
paths.data = '/N/project/hasda/DataDir';

 
if ~exist('subjectList','var')
    % generate a list of subjects from directories in path
    %subjectList =dir(paths.data); subjectList(1:2)=[]; %#ok<*NASGU> %remove '.' and '..'
    subjectList = dir(fullfile(paths.data,'HASDA0*'));
end

% subjectList(end)=[];
clear subjectList %remove the above generated list
subjectList(1).name = 'HASDA0002'; 
%subjectList(end+1).name = 'SUBEJCT2'; % copy this line for additional subjects

configs.name.T1 = 'T1';
configs.name.epiFolder = 'EPI1';
    configs.name.sefmFolder = 'UNWARP'; % Reserved for Field Mapping series
        configs.name.APdcm = 'SEFM_AP_DICOMS'; % Spin Echo A-P
        configs.name.PAdcm = 'SEFM_PA_DICOMS'; % Spin Echo P-A
configs.name.grefmFolder = 'GREFM_GUST'; % Reserved for Field Mapping series
    configs.name.GREmagdcm = 'MAG_DICOMS'; % Gradient echo FM magnitude series
    configs.name.GREphasedcm = 'PHASE_DICOMS'; % Gradient echo FM phase map series


%%
%% SET WHICH PARCELLATIONS YOU WANT TO USE
% Schaefer parcellation of yeo17 into 200 nodes
parcs.plabel(1).name='schaefer200_yeo17';
parcs.pdir(1).name='Schaefer2018_200Parcels_17Networks_order_FSLMNI152_1mm';
parcs.pcort(1).true=1;
parcs.pnodal(1).true=1;
parcs.psubcortonly(1).true=0;

% Schaefer parcellation of yeo17 into 300 nodes
parcs.plabel(2).name='schaefer300_yeo17';
parcs.pdir(2).name='Schaefer2018_300Parcels_17Networks_order_FSLMNI152_1mm';
parcs.pcort(2).true=1;
parcs.pnodal(2).true=1;
parcs.psubcortonly(2).true=0;

% yeo 17 resting state network parcellation
parcs.plabel(3).name='yeo17';
parcs.pdir(3).name='yeo17_MNI152';
parcs.pcort(3).true=1;
parcs.pnodal(3).true=0;
parcs.psubcortonly(3).true=0;

% see MelbourneSubCort for the original parcels 
% Tian subcortical parcellation (7T-derived, S1-S4, coarse-to-fine parcels)
parcs.plabel(4).name='tian_subcortical_S2';
parcs.pdir(4).name='Tian_Subcortex_S2_7T_FSLMNI152_1mm';
parcs.pcort(4).true=0;
parcs.pnodal(4).true=1;
parcs.psubcortonly(4).true=1;

%%
%%
                          %--------------%
                          %    fMRI_A    %
                          %--------------%   
                     %---------------------------%
                     %   SELECT fMRI_A SUBFLAGS  %
                     %---------------------------%
                            % DATA IMPORT
% Number of EPI sessions is determined by number of EPI directories. If you
% wish to only process select sessions, set them via epiMin and epiMax.
    configs.EPI.epiMin = 1; % minimum scan index
    configs.EPI.epiMax = 4; % maximum scan index
flags.EPI.dcm2niix = 0; % dicom import
flags.EPI.ReadHeaders = 1; % obtain pertinent scan information
    configs.EPI.UseJson = 1; % obtain pertinent scan information through json files generated by dcm2niix
%-------------------------------------------------------------------------%
                            % DISTORTION CORRECTION
                %--------------------------------------------%
                %  Spin Echo Field Map Acquisition
flags.EPI.SpinEchoUnwarp = 1; % Requires UNWARP directory and approporiate dicoms.
    % Allow multiple UNWARP directories (0: UNWARP; 1: UNWARP1, 2: UNWARP2) 
    configs.EPI.SEindex = 0; % Appends index to configs.name.sefmFolder name
    configs.EPI.skipSEmap4EPI = []; % Skip SEmap calculation for EPInum > configs.EPI.skipGREmap4EPI
                % e.g.; 1 to skip redoing SEmap for EPIs 2-6; 5 to skip for EPI6
    % SPIN ECHO PAIRS (A-P, P-A) Acquistion on the Prisma
    configs.EPI.SEnumMaps = 1; % Fallback number of PAIRS of AP and PA field maps.
    % SEnumMaps is delaulted to if fslinfo cannot determine number of
    % images.
                %--------------------------------------------%
                % Gradient recalled echo Field Map Acquisition
flags.EPI.GREFMUnwarp = 0; % Requires GREfieldmap directory and appropriate dicoms
    configs.EPI.skipGREmap4EPI=1; % Skip GREmap calculation for EPInum > configs.EPI.skipGREmap4EPI
                % 0 to ignore. 1 to skip redoing GREmap for EPIs 2-6
    configs.EPI.GREbetf = 0.5; % GRE-specific bet values. Do not change
    configs.EPI.GREbetg = 0;   % GRE-specific bet input. Change if needed 
    configs.EPI.GREdespike = 1; % Perform FM despiking
    configs.EPI.GREsmooth = 3; % GRE phase map smoothing (Gaussian sigma, mm)
    % Do not use configs.EPI.EPIdwell. Use params.EPI.EffectiveEchoSpacing
    % extracted from the json header
%     configs.EPI.EPIdwell = 0.000308; % Dwell time (sec) for the EPI to be unwarped 
%-------------------------------------------------------------------------%
                    % PREPROCESSING & ANATOMY REGISTRATION
flags.EPI.SliceTimingCorr = 1; % recommended for TR > 1.2s or non multiband data
    configs.EPI.minTR = 1.6; % skip if TR below minTR; good for multiple acquisition datasets
    configs.EPI.UseTcustom = 1;% 1: use header-extracted times (suggested)
flags.EPI.MotionCorr = 1;
flags.EPI.RegT1 = 1;
    configs.EPI.epibetF = 0.3;
    configs.EPI.minVoxelsClust = 8; % originally hardwired to 8
flags.EPI.RegOthers = 1;
    configs.EPI.GMprobthr = 0.2;% Threshold the GM probability image
                                 % change from 0.25 to 0.2 or 0.15
flags.EPI.IntNorm4D = 1; % Intensity normalization to global 4D mean of 1000
%-------------------------------------------------------------------------%
                       % MOTION AND OUTLIER CORRECTION
%-------------------------------------------------------------------------% 
% This section must be ran as a whole!
flags.EPI.NuisanceReg = 2;
    % 0 - skip
    % 1 - ICA-based denoising; WARNING: This will smooth your data.
    % 2 - Head Motion Parameter Regression
        configs.EPI.numReg = 12; % 12 (orig and deriv) or 24 (+ sq of 12)
    flags.EPI.PhysReg = 1; %physiological regressors
        % 0 - skip
        % 1 - aCompCorr; PCA based CSF and WM signal regression (up to 5
        %     components)
            configs.EPI.numPC = 5; % 1-5; the maximum and recommended number is 5 % leave empty to putput all
        % 2 - mean WM and CSF signal regression
            configs.EPI.numPhys = 2; % 2-orig; 4-orig+deriv; 8-orig+deriv+sq
    flags.EPI.GS = 1; % global signal regression 
        configs.EPI.numGS = 4; % 1-orig; 2-orig+deriv; 4-orig+deriv+sq        
    flags.EPI.DemeanDetrend = 1;
    flags.EPI.BandPass = 1;
        % 0 - DCT
        % 1 - butterworth bandpass filtering 
        configs.EPI.fMin = .009; %Parkes 2018 & Satterthwaite 2013 NeuroImage
        configs.EPI.fMax = .08; 
        configs.EPI.dct = 9;
    flags.EPI.scrubbing = 0; % perform scrubbing based on FD and DVARS criteria
        configs.EPI.FDcut = []; % [] uses fsl outlier critera
        configs.EPI.DVARScut = [];
    flags.EPI.ROIs = 1; % extract parcellation timeseries
%-------------------------------------------------------------------------% 
%% 
                    %------------------------%
                    %  MATRICES AND FIGURES  %
                    %         fMRI_B         %
                    %------------------------%

flags.EPI.FigsMotionGS = 1; % fig 1 of motion and gs trends
flags.EPI.FigsPreRegress = 0; % fig 2 of tissue data before regression
flags.EPI.FigsPostRegress = 0; % fig 3 of tissue data after regression
flags.EPI.FigsDmdtRegress = 1; % fig 4 of dmdt tissue data after regression
flags.EPI.FigsParcellations = 1; % fig 5 of parcellation data after regression
flags.EPI.FigsFC = 1; % fig(s) 6+ of functional connectivity for each parcellation
flags.EPI.SaveFigs = 1; % save .fig .eps .png

                       %------------------%
                       %  SET PARAMETERS  %
                       %------------------%
configs.EPI.preColorMin = 0; % minimum colorbar value for pre-regress plots
configs.EPI.preColorMax = 1000; % maximum colorbar value for pre-regress plots
configs.EPI.postColorMin = 0; % minimum colorbar value for post-regress plots
configs.EPI.postColorMax = 10; % maximum colorbar value for post-regress plots
configs.EPI.dmdtColorMin = -50; % minimum colorbar value for dmdt-regress plots
configs.EPI.dmdtColorMax = 50; % maximum colorbar value for dmdt-regress plots
configs.EPI.parcsColorMin = -10; % minimum colorbar value for parcs-regress plots
configs.EPI.parcsColorMax = 10; % minimum colorbar value for parcs-regress plots
configs.EPI.fcColorMinP = -1.0; % -0.75; % minimum colorbar value for Pearson's FC plots
configs.EPI.fcColorMaxP = 1.0; % 0.75; % maximum colorbar value for Pearson;s FC plots
configs.EPI.fcColorMinS = -1.0; % -0.75; % minimum colorbar value for Spearman's FC plots
configs.EPI.fcColorMaxS = 1.0; % 0.75; % maximum colorbar value for Spearman's FC plots
configs.EPI.fcColorMinZ = -1.5; % -1.0; % minimum colorbar value for Fishers z FC plots
configs.EPI.fcColorMaxZ = 1.5; % 1.0; % maximum colorbar value for Fisher's z FC plots
configs.EPI.fcColorMinM = .01; % minimum colorbar value for NMI FC plots
configs.EPI.fcColorMaxM = 0.6; % 0.5; % maximum colorbar value for NMI FC plots
% histogramming and fitting Pearson's correlations 
configs.EPI.nbinPearson = 201; % number of histogram bins (Pearson's correlation)
configs.EPI.kernelPearsonBw = 0.05; % fitting kernel bandwidth  
% histogramming and fitting mutual information
configs.EPI.nbinMutualI = 101; % number of histogram bins (Pearson's correlation)
configs.EPI.kernelMutualIBw = 0.03; % fitting kernel bandwidth  

%%

% Generate figures for all subjects in subjectList
for i=1:length(subjectList)
    paths.subject = fullfile(paths.data,subjectList(i).name);
    paths.T1.dir=fullfile(paths.subject,configs.name.T1);
    % check that subject path and T1 directory exist
    if exist(paths.subject,'dir') && exist(paths.T1.dir,'dir')
        % Generate list of EPI scan directories
        dircont=dir(paths.subject); dircont(1:2)=[];% find content of subject dir
        epiList=struct.empty;
        for e=1:length(dircont)
            if dircont(e).isdir==1 && ~isempty(strfind(dircont(e).name,configs.name.epiFolder))
                epiList(end+1).name=dircont(e).name; %#ok<*AGROW>
            end
        end
        if ~isempty(epiList)
            configs.EPI.sessions=epiList;
            % For each session under this subject    
            for j=1:length(epiList)
                % Operating on the scans set in configs
                if j >= configs.EPI.epiMin && j <= configs.EPI.epiMax
                    paths.EPI.dir=fullfile(paths.subject,epiList(j).name);
                        subjectinfo = strcat(subjectList(i).name,', ',epiList(j).name);
                        disp('------------------------')
                        fprintf('fMRI_B on %s\n',subjectinfo)
                        fprintf('EPI series: %s\n',epiList(j).name)
                        disp('------------------------')
                        % Generate the figures
                        [paths,flags,configs,parcs]=f_fMRI_plots(paths,flags,configs,parcs);
                        % save the cofiguration variables for this run
                        configFile=fullfile(paths.subject,sprintf('configs_%s_B_%s.mat',epiList(j).name,datestr(now,'yyyymmdd')));
                        if exist(configFile,'file')
                            count=dir(fullfile(paths.subject,sprintf('configs_%s_B_%s*',epiList(j).name,datestr(now,'yyyymmdd'))));
                            count=length(count);
                            configFile=fullfile(paths.subject,sprintf('configs_%s_B_%s_run%d.mat',epiList(j).name,datestr(now,'yyyymmdd'),count+1));
                        end
                        save(configFile,'-struct','configs','EPI');
                    diary off
                end
            end
        else
            disp(subjectList(i).name)
            warning('No %s containing session names found. Check for consistency of nomenclature',configs.name.epiFolder)
        end
    else
        disp(subjectList(i).name)
        warning('Either path to subject or %s not found',configs.name.epiFolder)
    end
end

cd(paths.scripts)

